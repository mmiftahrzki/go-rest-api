openapi: 3.0.3
info:
  title: RESTful API
  version: 1.0.0
  description: This is the minimum RESTful API
  contact:
    name: Muhamamd Miftah Rizki
    email: muhamamdmiftahrizki@gmail.com
servers:
  # - url: https://1111ft4h.xyz/api
  - url: /api
paths:
  /auth/signin:
    post:
      tags:
        - auth
      summary: ""
      description: ""
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignIn"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
                format: jwt
  /users:
    post:
      tags:
        - user
      summary: Add a new user to the service
      description: Add a new user to the service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: ""
          content:
            application/json: {}
  /customers:
    post:
      tags:
        - customer
      description: ""
      security:
        - auth: []
      responses:
        "201":
          description: ""
    get:
      tags:
        - customer
      summary: returns customers list
      description: returns customers list
      security:
        - auth: []
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
  /customers/{id}:
    get:
      tags:
        - customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      security:
        - auth: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
    put:
      tags:
        - customer
      security:
        - auth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      description: ""
      responses:
        "200":
          description: ""
    delete:
      tags:
        - customer
      security:
        - auth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      description: ""
      responses:
        "200":
          description: ""
  /customers/{id}/prev:
    get:
      tags:
        - customer
      security:
        - auth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
  /customers/{id}/next:
    get:
      tags:
        - customer
      security:
        - auth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
components:
  schemas:
    SignIn:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    User:
      type: object
      required:
        - email
        - password
        - fullname
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        password:
          type: string
        fullname:
          type: string
        created_at:
          type: string
          format: date-time
        created_by:
          type: string
          format: email
    Customer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
        fullname:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
            - other
        date_of_birth:
          type: string
          format: date
        created_at:
          type: string
          format: date-time
        created_by:
          type: string
          format: email
    Response:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
  responses:
    default:
      description: Unexpected error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
